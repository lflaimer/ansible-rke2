---
- name: Disable swap immediately if any swap is active
  ansible.builtin.command: swapoff -a
  when: (ansible_swaptotal_mb | default(0) | int) > 0
  changed_when: (ansible_swaptotal_mb | default(0) | int) > 0
  tags: [swap]

- name: Ensure swap entries are absent in /etc/fstab (persistent)
  ansible.posix.mount:
    name: swap
    fstype: swap
    state: absent
  tags: [swap]

- name: Reduce swappiness
  ansible.builtin.sysctl:
    name: vm.swappiness
    value: "0"
    state: present
    sysctl_set: true
    reload: true
  tags: [swap]

- name: Create RKE2 configuration directory
  ansible.builtin.file:
    path: /etc/rancher/rke2
    state: directory
    owner: "{{ rke2_config_owner }}"
    group: "{{ rke2_config_group }}"
    mode: "0750"
  tags: [rke2]

- name: Template RKE2 config.yaml
  ansible.builtin.template:
    src: config.yaml.j2
    dest: /etc/rancher/rke2/config.yaml
    owner: "{{ rke2_config_owner }}"
    group: "{{ rke2_config_group }}"
    mode: "0640"
  notify: "restart rke2 {{ rke2_node_type }}"
  tags: [rke2]

- name: Download RKE2 installation script
  ansible.builtin.get_url:
    url: https://get.rke2.io
    dest: /usr/local/sbin/rke2-install.sh
    mode: "0750"
  tags: [rke2]

- name: Ensure RKE2 server manifests dir exists
  ansible.builtin.file:
    path: /var/lib/rancher/rke2/server/manifests
    state: directory
    owner: root
    group: root
    mode: "0755"
  when: rke2_node_type in ['head','server'] and rke2_manage_ingress
  tags: [rke2]

- name: Render IngressClass manifest
  ansible.builtin.copy:
    dest: /var/lib/rancher/rke2/server/manifests/ingressclass-{{ rke2_ingress_class_name }}.yaml
    owner: root
    group: root
    mode: "0644"
    content: |
      apiVersion: networking.k8s.io/v1
      kind: IngressClass
      metadata:
        name: {{ rke2_ingress_class_name }}
      spec:
        controller: {{ rke2_ingress_controller_value }}
  when: rke2_node_type in ['head','server'] and rke2_manage_ingress
  tags: [nginx]

- name: Render HelmChartConfig for rke2-ingress-nginx
  ansible.builtin.template:
    src: rke2-ingress-nginx-helmconfig.yaml.j2
    dest: /var/lib/rancher/rke2/server/manifests/rke2-ingress-nginx-config.yaml
    owner: root
    group: root
    mode: "0644"
  when: rke2_node_type in ['head','server'] and rke2_manage_ingress
  tags: [nginx]

- name: Install & start RKE2 on HEAD
  when: rke2_node_type == 'head'
  block:
    - name: Install RKE2 server
      ansible.builtin.command: /usr/bin/env bash /usr/local/sbin/rke2-install.sh
      environment:
        INSTALL_RKE2_CHANNEL: "{{ rke2_channel }}"
        INSTALL_RKE2_VERSION: "{{ rke2_version }}"
        INSTALL_RKE2_TYPE: "server"
      args:
        creates: /usr/local/bin/rke2

    - name: systemd daemon-reload
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Enable/start rke2-server
      ansible.builtin.systemd:
        name: rke2-server.service
        enabled: true
        state: started

    - name: Wait for head supervisor API (9345)
      ansible.builtin.wait_for:
        host: 127.0.0.1
        port: 9345
        timeout: "{{ rke2_api_wait_timeout }}"

- name: Install & start RKE2 on SERVERS
  when: rke2_node_type == 'server'
  block:
    - name: Wait for head supervisor API (9345)
      ansible.builtin.wait_for:
        host: "{{ rke2_server_ip }}"
        port: 9345
        timeout: "{{ rke2_api_wait_timeout }}"

    - name: Install RKE2 server
      ansible.builtin.command: /usr/bin/env bash /usr/local/sbin/rke2-install.sh
      environment:
        INSTALL_RKE2_CHANNEL: "{{ rke2_channel }}"
        INSTALL_RKE2_VERSION: "{{ rke2_version }}"
        INSTALL_RKE2_TYPE: "server"
      args:
        creates: /usr/local/bin/rke2

    - name: systemd daemon-reload
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Enable/start rke2-server
      ansible.builtin.systemd:
        name: rke2-server.service
        enabled: true
        state: started

- name: Install & start RKE2 on AGENTS
  when: rke2_node_type == 'agent'
  block:
    - name: Wait for head supervisor API (9345)
      ansible.builtin.wait_for:
        host: "{{ rke2_server_ip }}"
        port: 9345
        timeout: "{{ rke2_api_wait_timeout }}"

    - name: Install RKE2 agent
      ansible.builtin.command: /usr/bin/env bash /usr/local/sbin/rke2-install.sh
      environment:
        INSTALL_RKE2_CHANNEL: "{{ rke2_channel }}"
        INSTALL_RKE2_VERSION: "{{ rke2_version }}"
        INSTALL_RKE2_TYPE: "agent"
      args:
        creates: /usr/local/bin/rke2

    - name: systemd daemon-reload
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Enable/start rke2-agent
      ansible.builtin.systemd:
        name: rke2-agent.service
        enabled: true
        state: started

- name: Ensure Helm is installed
  ansible.builtin.get_url:
    url: https://get.helm.sh/helm-v3.15.4-linux-amd64.tar.gz
    dest: /tmp/helm.tar.gz
    mode: '0644'
  become: true

- name: Extract helm binary
  ansible.builtin.unarchive:
    src: /tmp/helm.tar.gz
    dest: /tmp
    remote_src: true
  become: true

- name: Move helm binary into PATH
  ansible.builtin.copy:
    src: /tmp/linux-amd64/helm
    dest: /usr/local/bin/helm
    mode: '0755'
  become: true