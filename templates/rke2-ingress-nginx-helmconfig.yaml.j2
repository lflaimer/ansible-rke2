apiVersion: helm.cattle.io/v1
kind: HelmChartConfig
metadata:
  name: rke2-ingress-nginx
  namespace: kube-system
spec:
  valuesContent: |-
    controller:
      kind: DaemonSet
      hostNetwork: {{ (rke2_ingress_hostNetwork | default(true)) | bool }}
      dnsPolicy: {{ rke2_ingress_dnsPolicy | default('ClusterFirstWithHostNet') }}

      # Use existing IngressClass by name; DO NOT create/manage the resource
      ingressClass: {{ rke2_ingress_class_name | default('public') }}
      ingressClassByName: true
      ingressClassResource:
        enabled: false

      watchIngressWithoutClass: {{ (rke2_ingress_watch_without_class | default(false)) | bool }}

      nodeSelector:
{% for k, v in (rke2_ingress_node_selector | default({'node-role.kubernetes.io/worker':'true'})).items() %}
        {{ k }}: "{{ v }}"
{% endfor %}

      tolerations:
{% if (rke2_ingress_tolerations | default([])) | length == 0 %}
        []
{% else %}
{% for t in rke2_ingress_tolerations %}
        - {{ t | to_nice_yaml(indent=10) | trim }}
{% endfor %}
{% endif %}

      # NGINX controller config (e.g., Cloudflare client IP handling)
      config:
{% for k, v in (rke2_ingress_nginx_config | default({'use-forwarded-headers':'true','compute-full-forwarded-for':'true','real-ip-header':'CF-Connecting-IP'})).items() %}
        {{ k }}: {{ v | tojson }}
{% endfor %}

      # With hostNetwork=true we don't need a Service
      service:
        enabled: {{ (rke2_ingress_service_enabled | default(false)) | bool }}
